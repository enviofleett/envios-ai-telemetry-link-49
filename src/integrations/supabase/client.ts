
// This file is automatically generated. Do not edit it directly.
import { createClient } from '@supabase/supabase-js';
import type { Database } from './types';

// Get environment variables with validation
const getSupabaseUrl = (): string => {
  // Try environment variable first
  const envUrl = import.meta.env.VITE_SUPABASE_URL;
  
  // Debug logging
  console.log('üîç Environment variable VITE_SUPABASE_URL:', envUrl);
  console.log('üîç All environment variables:', import.meta.env);
  
  if (envUrl) {
    console.log('‚úÖ Using environment variable for Supabase URL');
    return envUrl;
  }
  
  // Fallback to hardcoded value for this project
  const fallbackUrl = 'https://bjkqxmvjuewshomihjqm.supabase.co';
  console.log('‚ö†Ô∏è Using fallback Supabase URL:', fallbackUrl);
  return fallbackUrl;
};

const getSupabaseAnonKey = (): string => {
  // Try environment variable first
  const envKey = import.meta.env.VITE_SUPABASE_ANON_KEY;
  
  // Debug logging
  console.log('üîç Environment variable VITE_SUPABASE_ANON_KEY:', envKey ? 'Found' : 'Missing');
  
  if (envKey) {
    console.log('‚úÖ Using environment variable for Supabase anon key');
    return envKey;
  }
  
  // Fallback to hardcoded value for this project
  const fallbackKey = 'eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJzdXBhYmFzZSIsInJlZiI6ImJqa3F4bXZqdWV3c2hvbWloanFtIiwicm9sZSI6ImFub24iLCJpYXQiOjE3NDkwMzk4MzEsImV4cCI6MjA2NDYxNTgzMX0.VbyYBsPAp_a699yZ3xHtGGzljIQPm24EnwXLaGcsJb0';
  console.log('‚ö†Ô∏è Using fallback Supabase anon key');
  return fallbackKey;
};

export const SUPABASE_URL = getSupabaseUrl();
const SUPABASE_PUBLISHABLE_KEY = getSupabaseAnonKey();

// Import the supabase client like this:
// import { supabase } from "@/integrations/supabase/client";

export const supabase = createClient<Database>(SUPABASE_URL, SUPABASE_PUBLISHABLE_KEY, {
  auth: {
    storage: window.localStorage,
    persistSession: true,
    autoRefreshToken: true,
  }
});

console.log('üöÄ Supabase client initialized successfully with URL:', SUPABASE_URL);
